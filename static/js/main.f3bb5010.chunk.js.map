{"version":3,"sources":["components/Card.js","pages/Home.js","components/Header.js","router/MainRouter.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["RecipeReviewCard","state","expanded","handleExpandClick","_this","setState","classes","this","props","react_default","a","createElement","Card_default","className","card","CardHeader_default","avatar","Avatar_default","aria-label","action","IconButton_default","MoreVert_default","title","subheader","CardMedia_default","media","image","CardContent_default","Typography_default","component","CardActions_default","actions","disableActionSpacing","Favorite_default","Share_default","classnames","expand","Object","defineProperty","expandOpen","onClick","aria-expanded","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","paragraph","React","Component","withStyles","theme","maxWidth","margin","height","paddingTop","display","transform","marginLeft","transition","transitions","create","duration","shortest","backgroundColor","red","Home","handleClick","fetch","method","headers","Content-Type","then","response","json","data","alert","message","catch","error","console","log","match","path","map","row","components_Card","_this2","style","padding","Button_default","variant","color","button","Send_default","rightIcon","GridList_default","cellHeight","width","mapCards","spacing","unit","leftIcon","marginRight","iconSmall","fontSize","styles","root","flexGrow","grow","menuButton","Header","AppBar_default","position","Toolbar_default","Menu_default","right","MainRouter","Header_Header","Route","exact","window","location","pathname","App","BrowserRouter","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f3bb5010.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 700,\n    margin: 4\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  actions: {\n    display: 'flex',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n});\n\nclass RecipeReviewCard extends React.Component {\n  state = { expanded: false };\n\n  handleExpandClick = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n              К\n            </Avatar>\n          }\n          action={\n            <IconButton>\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title=\"KEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAM\"\n          subheader=\"Февраль 17, 2018\"\n        />\n        <CardMedia\n          className={classes.media}\n          image=\"http://risovach.ru/thumb/upload/240c240/2017/02/generator/oo_136389863_orig_.jpg?ejv9p\"\n          title=\"KEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAM\"\n        />\n        <CardContent>\n          <Typography component=\"p\">\n            KEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAM\n          </Typography>\n        </CardContent>\n        <CardActions className={classes.actions} disableActionSpacing>\n          <IconButton aria-label=\"Add to favorites\">\n            <FavoriteIcon />\n          </IconButton>\n          <IconButton aria-label=\"Share\">\n            <ShareIcon />\n          </IconButton>\n          <IconButton\n            className={classnames(classes.expand, {\n              [classes.expandOpen]: this.state.expanded,\n            })}\n            onClick={this.handleExpandClick}\n            aria-expanded={this.state.expanded}\n            aria-label=\"Show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>Лолям:</Typography>\n            <Typography paragraph>\n            KEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAMKEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAM.\n            </Typography>\n            <Typography paragraph>\n            KEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAMKEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAMKEKEKEKEKEKEKEKEK \n            LOLOL TATATAMAMTAMKEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAMKEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAMKEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAM\n            </Typography>\n            <Typography paragraph>\n            KEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAMKEKEKEKEKEKEKEKEK LOLOL \n            KEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAMKEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAMKEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAM\n            KEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAMKEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAM\n            TATATAMAMTAMKEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAMKEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAM\n            </Typography>\n            <Typography>\n            KEKEKEKEKEKEKEKEK LOLOL TATATAMAMTAM.\n            </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nRecipeReviewCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(RecipeReviewCard);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport Card from '../components/Card'\nimport SendIcon from '@material-ui/icons/Send';\n\nclass Home extends Component {\n\n    componentDidMount () {\n        console.log(\"KEEEK\")\n        console.log(this.props.match.path)\n        console.log(\"LOOOOL\")\n\n    }\n\n    handleClick = () => {\n        let url = 'https://vtyom5ya1l.execute-api.us-east-1.amazonaws.com/production/users/create'\n        fetch(url,\n        {\n            method: \"GET\",\n            headers:\n              {\n                'Content-Type': 'application/x-www-form-urlencoded',\n              },\n                \n        })\n        .then(response => {\n        return response.json()\n        })\n        .then((data) => {\n            alert(data.message)\n        })\n        .catch((error) => {\n        console.log(error)\n        })\n    } \n\n    mapCards () {\n        let arr = [1,1,1,1,1,1,1,1]\n        return (\n            arr.map(row => {\n                return (\n                    <Card/>\n                )\n            })\n        )\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div style={{padding: 16}}>\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>this.handleClick()} className={classes.button}>\n                    Гет запрос ту АВС ЛЯМБДА\n                    {/* This Button uses a Font Icon, see the installation instructions in the docs. */}\n                    <SendIcon className={classes.rightIcon}></SendIcon>\n                </Button>\n\n                <GridList cellHeight={180} className={{ width: 500, height: 450 }}>\n                \n                    {this.mapCards()}\n                </GridList>\n            </div>\n        );\n    }\n}\n\nconst styles = theme => ({\n    button: {\n      margin: theme.spacing.unit,\n    },\n    leftIcon: {\n      marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n      marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  });\n\n  Home.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };  \n\nexport default withStyles(styles)(Home);\n","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = {\n    root: {\n      flexGrow: 1,\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginLeft: -12,\n      marginRight: 20,\n    },\n  };\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className={styles.root}>\n                <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton className={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                    <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\" className={styles.grow}>\n                     Главная\n                    </Typography>\n                    <Button style={{position: \"absolute\", right: 16}} color=\"inherit\">Авторизоваться</Button>\n                </Toolbar>\n                </AppBar>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Home from '../pages/Home'\nimport Header from '../components/Header'\n\nclass MainRouter extends Component {\n    \n    componentDidMount() {\n        console.log(\"+++++\")\n        console.log(this.props.match.path)\n        console.log(\"+++++\")\n    }\n\n    render() {\n        return (\n            <div>\n                <Header/>\n                <Route exact path={window.location.pathname} component={Home} />\n            </div>\n        );\n    }\n}\n\nexport default MainRouter;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport MainRouter from './router/MainRouter'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route component={MainRouter} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}